#pragma once

#include <cstdint>


namespace prism {
namespace s6 {


struct ls2d_settings {
    uint8_t eth_mac[6];         // MAC-адрес
    uint32_t eth_ip;            // IP-адрес
    uint8_t laser;              // 0x00 - выкл, 0x01 - вкл
    uint8_t sync_mode;          // 0x01 - внутренний таймер, 0x02 - внешняя синхронизация,  0x04 - внешнее разрешение
    uint32_t period;            // [23:0] период измерения, мкс. Если период слишком маленький, датчик будет работать с минимально допустимым периодом.
    uint16_t expo_1;            // первая экспозиция, мкс.
    uint8_t reset_level_1;      // [3:0] уровень сброса в условных единицах. По умолчанию 0x0C.
    uint16_t expo_2;            // вторая экспозиция, мкс.
    uint8_t sens_mode;          // [0] - включить двойную экспозицию (требуется рестарт)
    uint8_t sens_gain;          // аналоговое усиление сенсора, 0x01 = 1.0, 0x02 = 1.8, 0x03 = 8.0
    uint8_t sub_xs;             // субкадр, начало по горизонтали, [0-159] (шаг = 8 пикселей)
    uint8_t sub_xe;             // субкадр, конец по горизонтали, [0-159] (шаг = 8 пикселей)
    uint16_t sub_ys;            // субкадр, начало по вертикали [0-1023]
    uint16_t sub_ye;            // субкадр, конец по вертикали [0-1023]
    uint8_t sens_restart;       // 0x01 - перезапуск сенсора в случае обнаружения сбоев
    uint8_t img_subtr;          // 0x01 - вычитание фонового изображения (запоминается при старте и отдельными командами)
    uint8_t conv_bypass;        // 0x01 - пропуск свертки
    uint8_t locmax_dist[3];     // тест на соответствие условию локального максимума, три пары расстояний (в пикселях [0-31], в каждую сторону)
    uint8_t locmax_thres[3];    // и порогов (уровень, [0-255])
    uint8_t find_max_mult;      // множитель (todo: текущего?) максимума при поиске сигнала  0x00 = 1/16, ... 0x04 = 1, ... 0x08 = 16
    uint8_t subpix_side_en;     // 0x01 - включить расчет по фронтам
    uint8_t subpix_side_thres;  // Высота расчета координат фронтов, в долях от максимума (шаг = 1/256)
    uint8_t cal_bypass;         // 0x01 - выдача некалиброванных значений
    uint8_t detach_window;      // фильтр, убирающий отдельностоящие точки, окно [3-31]
    uint8_t detach_points;      // минимальное кол-во находящихся рядом точек
    uint16_t detach_distance;   // максимальное расстояние, при котором точки считаются близкими, мм / (коэф (дробных бит))
    uint8_t median_window;      // размер окна медианного фильтра [1-31]. 0x00 - допустимое значение, фильтр выключен
    uint16_t conv_coef[16];     // коэффициенты симметричной нечетной свертки, знаковое число в дополнительном коде [-32768, 32767]. [0] - центральный.
    uint16_t xmod[8];           // настройки дополнительных функций датчика

    bool to_buffer(uint8_t buf[255]) const;
    bool from_buffer(uint8_t buf[255]);
};


}
}